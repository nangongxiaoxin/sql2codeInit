<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slilio.sql2codeInitDemo.mapper.ProductInfoMappers">
	<!-- 实体映射 -->
	<resultMap id="base_result_map" type="com.slilio.sql2codeInitDemo.entity.po.ProductInfo">
		<!--自增ID-->
		<id column="id" property="id"/>
		<!--厂商ID-->
		<result column="company_id" property="companyId"/>
		<!--编码-->
		<result column="code" property="code"/>
		<!--产品名-->
		<result column="product_name" property="productName"/>
		<!--价格-->
		<result column="price" property="price"/>
		<!--类型-->
		<result column="sku_type" property="skuType"/>
		<!--颜色-->
		<result column="color_type" property="colorType"/>
		<!--创建时间-->
		<result column="create_time" property="createTime"/>
		<!--创建日期-->
		<result column="create_date" property="createDate"/>
		<!--库存-->
		<result column="stock" property="stock"/>
		<!--状态-->
		<result column="status" property="status"/>
		<!--删除状态：0：删除；1：正常-->
		<result column="is_del" property="isDel"/>
	</resultMap>

	<!-- 通用查询列 -->
	<sql id="base_column_list">
		id,company_id,code,product_name,price,sku_type,color_type,create_time,create_date,stock,status,is_del
	</sql>

	<!-- 通用查询列 -->
	<sql id="base_query_condition">
		<if test="query.id != null">
			and id = #{query.id}
		</if>
		<if test="query.companyId != null and query.companyId!=''">
			and id = #{query.companyId}
		</if>
		<if test="query.code != null and query.code!=''">
			and id = #{query.code}
		</if>
		<if test="query.productName != null and query.productName!=''">
			and id = #{query.productName}
		</if>
		<if test="query.price != null">
			and id = #{query.price}
		</if>
		<if test="query.skuType != null">
			and id = #{query.skuType}
		</if>
		<if test="query.colorType != null">
			and id = #{query.colorType}
		</if>
		<if test="query.createTime != null">
			and id = #{query.createTime}
		</if>
		<if test="query.createDate != null">
			and id = #{query.createDate}
		</if>
		<if test="query.stock != null">
			and id = #{query.stock}
		</if>
		<if test="query.status != null">
			and id = #{query.status}
		</if>
		<if test="query.isDel != null">
			and id = #{query.isDel}
		</if>
	</sql>

	<!-- 扩展查询条件 -->
	<sql id="base_query_condition_extend">
		<if test="query.companyIdFuzzy != null and query.companyIdFuzzy !=''">
			and company_id like concat ('%', #{query.companyIdFuzzy}, '%')
		</if>
		<if test="query.codeFuzzy != null and query.codeFuzzy !=''">
			and code like concat ('%', #{query.codeFuzzy}, '%')
		</if>
		<if test="query.productNameFuzzy != null and query.productNameFuzzy !=''">
			and product_name like concat ('%', #{query.productNameFuzzy}, '%')
		</if>
		<if test="query.createTimeStart != null and query.createTimeStart !=''">
			<![CDATA[ and create_time >= str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
		</if>
		<if test="query.createTimeEnd != null and query.createTimeEnd !=''">
			<![CDATA[ and create_time < date_sub(str_to_date(#{query.createTimeEnd}, '%Y-%m-%d'),interval -1 day) ]]>
		</if>
		<if test="query.createDateStart != null and query.createDateStart !=''">
			<![CDATA[ and create_date >= str_to_date(#{query.createDateStart}, '%Y-%m-%d') ]]>
		</if>
		<if test="query.createDateEnd != null and query.createDateEnd !=''">
			<![CDATA[ and create_date < date_sub(str_to_date(#{query.createDateEnd}, '%Y-%m-%d'),interval -1 day) ]]>
		</if>
	</sql>

	<!-- 扩展查询条件 -->
	<sql id="query_condition">
		<where>
			<include refid="base_query_condition"/>
			<include refid="base_query_condition_extend"/>
		</where>
	</sql>


	<!-- 查询列表 -->
	<select id="selectList" resultMap="base_result_map">
		select <include refid="base_column_list"/> from tb_product_info <include refid="query_condition"/>
		<if test="query.orderBy!=null">order by ${query.orderBy}</if>
		<if test="query.simplePage!=null">limit #{query.simplePage.start},#{query.simplePage.end}</if>
	</select>


	<!-- 查询数量 -->
	<select id="selectCount" resultType="java.lang.Long">
		select count(1) from tb_product_info <include refid="query_condition"/>
	</select>


	<!-- 插入（匹配有值的字段） -->
	<insert id="insert" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo">
		<selectKey keyProperty="bean.id" resultType="Integer" order="AFTER">
			select last_insert_id()
		</selectKey>
		insert into tb_product_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.id != null">
				id,
			</if>
			<if test="bean.companyId != null">
				company_id,
			</if>
			<if test="bean.code != null">
				code,
			</if>
			<if test="bean.productName != null">
				product_name,
			</if>
			<if test="bean.price != null">
				price,
			</if>
			<if test="bean.skuType != null">
				sku_type,
			</if>
			<if test="bean.colorType != null">
				color_type,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
			<if test="bean.createDate != null">
				create_date,
			</if>
			<if test="bean.stock != null">
				stock,
			</if>
			<if test="bean.status != null">
				status,
			</if>
			<if test="bean.isDel != null">
				is_del,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.id != null">
				#{bean.id},
			</if>
			<if test="bean.companyId != null">
				#{bean.companyId},
			</if>
			<if test="bean.code != null">
				#{bean.code},
			</if>
			<if test="bean.productName != null">
				#{bean.productName},
			</if>
			<if test="bean.price != null">
				#{bean.price},
			</if>
			<if test="bean.skuType != null">
				#{bean.skuType},
			</if>
			<if test="bean.colorType != null">
				#{bean.colorType},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
			<if test="bean.createDate != null">
				#{bean.createDate},
			</if>
			<if test="bean.stock != null">
				#{bean.stock},
			</if>
			<if test="bean.status != null">
				#{bean.status},
			</if>
			<if test="bean.isDel != null">
				#{bean.isDel},
			</if>
		</trim>
	</insert>


	<!-- 插入或者更新(有匹配的值) -->
	<insert id="insertOrUpdate" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo">
		insert into tb_product_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="bean.id != null">
				id,
			</if>
			<if test="bean.companyId != null">
				company_id,
			</if>
			<if test="bean.code != null">
				code,
			</if>
			<if test="bean.productName != null">
				product_name,
			</if>
			<if test="bean.price != null">
				price,
			</if>
			<if test="bean.skuType != null">
				sku_type,
			</if>
			<if test="bean.colorType != null">
				color_type,
			</if>
			<if test="bean.createTime != null">
				create_time,
			</if>
			<if test="bean.createDate != null">
				create_date,
			</if>
			<if test="bean.stock != null">
				stock,
			</if>
			<if test="bean.status != null">
				status,
			</if>
			<if test="bean.isDel != null">
				is_del,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="bean.id != null">
				#{bean.id},
			</if>
			<if test="bean.companyId != null">
				#{bean.companyId},
			</if>
			<if test="bean.code != null">
				#{bean.code},
			</if>
			<if test="bean.productName != null">
				#{bean.productName},
			</if>
			<if test="bean.price != null">
				#{bean.price},
			</if>
			<if test="bean.skuType != null">
				#{bean.skuType},
			</if>
			<if test="bean.colorType != null">
				#{bean.colorType},
			</if>
			<if test="bean.createTime != null">
				#{bean.createTime},
			</if>
			<if test="bean.createDate != null">
				#{bean.createDate},
			</if>
			<if test="bean.stock != null">
				#{bean.stock},
			</if>
			<if test="bean.status != null">
				#{bean.status},
			</if>
			<if test="bean.isDel != null">
				#{bean.isDel},
			</if>
		</trim>
		on DUPLICATE KEY UPDATE
		<trim prefix="" suffix="" suffixOverrides=",">
			<if test="bean.companyId != null">
				company_id = values(company_id),
			</if>
			<if test="bean.productName != null">
				product_name = values(product_name),
			</if>
			<if test="bean.price != null">
				price = values(price),
			</if>
			<if test="bean.createTime != null">
				create_time = values(create_time),
			</if>
			<if test="bean.createDate != null">
				create_date = values(create_date),
			</if>
			<if test="bean.stock != null">
				stock = values(stock),
			</if>
			<if test="bean.status != null">
				status = values(status),
			</if>
			<if test="bean.isDel != null">
				is_del = values(is_del),
			</if>
		</trim>
	</insert>


	<!-- 批量插入 -->
	<insert id="insertBatch" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo">
		insert into tb_product_info(company_id,code,product_name,price,sku_type,color_type,create_time,create_date,stock,status,is_del)values
		<foreach collection="list" item="item" separator=",">
			(#{item.companyId},#{item.code},#{item.productName},#{item.price},#{item.skuType},#{item.colorType},#{item.createTime},#{item.createDate},#{item.stock},#{item.status},#{item.isDel})
		</foreach>
	</insert>


	<!-- 批量插入或更新 -->
	<insert id="insertOrUpdateBatch" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo">
		insert into tb_product_info(company_id,code,product_name,price,sku_type,color_type,create_time,create_date,stock,status,is_del)values
		<foreach collection="list" item="item" separator=",">
			(#{item.companyId},#{item.code},#{item.productName},#{item.price},#{item.skuType},#{item.colorType},#{item.createTime},#{item.createDate},#{item.stock},#{item.status},#{item.isDel})
		</foreach>
		on DUPLICATE KEY UPDATE id = values(id),company_id = values(company_id),code = values(code),product_name = values(product_name),price = values(price),sku_type = values(sku_type),color_type = values(color_type),create_time = values(create_time),create_date = values(create_date),stock = values(stock),status = values(status),is_del = values(is_del)
	</insert>


	<!-- 根据 Id 查询 -->
	<select id="selectById" resultMap="base_result_map">
		select <include refid="base_column_list"/> from tb_product_info where id=#{id}
	</select>

	<!-- 根据 Id 更新 -->
	<update id="updateById" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo" >
		update tb_product_info
		<set>
			<if test="bean.id != null">
				id = #{bean.id},
			</if>
			<if test="bean.companyId != null">
				company_id = #{bean.companyId},
			</if>
			<if test="bean.code != null">
				code = #{bean.code},
			</if>
			<if test="bean.productName != null">
				product_name = #{bean.productName},
			</if>
			<if test="bean.price != null">
				price = #{bean.price},
			</if>
			<if test="bean.skuType != null">
				sku_type = #{bean.skuType},
			</if>
			<if test="bean.colorType != null">
				color_type = #{bean.colorType},
			</if>
			<if test="bean.createTime != null">
				create_time = #{bean.createTime},
			</if>
			<if test="bean.createDate != null">
				create_date = #{bean.createDate},
			</if>
			<if test="bean.stock != null">
				stock = #{bean.stock},
			</if>
			<if test="bean.status != null">
				status = #{bean.status},
			</if>
			<if test="bean.isDel != null">
				is_del = #{bean.isDel},
			</if>
		</set>
		where id=#{id}
	</update>

	<!-- 根据 Id 删除 -->
	<delete id="deleteById">
		delete from tb_product_info where id=#{id}
	</delete>

	<!-- 根据 Code 查询 -->
	<select id="selectByCode" resultMap="base_result_map">
		select <include refid="base_column_list"/> from tb_product_info where code=#{code}
	</select>

	<!-- 根据 Code 更新 -->
	<update id="updateByCode" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo" >
		update tb_product_info
		<set>
			<if test="bean.id != null">
				id = #{bean.id},
			</if>
			<if test="bean.companyId != null">
				company_id = #{bean.companyId},
			</if>
			<if test="bean.code != null">
				code = #{bean.code},
			</if>
			<if test="bean.productName != null">
				product_name = #{bean.productName},
			</if>
			<if test="bean.price != null">
				price = #{bean.price},
			</if>
			<if test="bean.skuType != null">
				sku_type = #{bean.skuType},
			</if>
			<if test="bean.colorType != null">
				color_type = #{bean.colorType},
			</if>
			<if test="bean.createTime != null">
				create_time = #{bean.createTime},
			</if>
			<if test="bean.createDate != null">
				create_date = #{bean.createDate},
			</if>
			<if test="bean.stock != null">
				stock = #{bean.stock},
			</if>
			<if test="bean.status != null">
				status = #{bean.status},
			</if>
			<if test="bean.isDel != null">
				is_del = #{bean.isDel},
			</if>
		</set>
		where code=#{code}
	</update>

	<!-- 根据 Code 删除 -->
	<delete id="deleteByCode">
		delete from tb_product_info where code=#{code}
	</delete>

	<!-- 根据 SkuTypeAndColorType 查询 -->
	<select id="selectBySkuTypeAndColorType" resultMap="base_result_map">
		select <include refid="base_column_list"/> from tb_product_info where sku_type=#{skuType} and color_type=#{colorType}
	</select>

	<!-- 根据 SkuTypeAndColorType 更新 -->
	<update id="updateBySkuTypeAndColorType" parameterType="com.slilio.sql2codeInitDemo.entity.po.ProductInfo" >
		update tb_product_info
		<set>
			<if test="bean.id != null">
				id = #{bean.id},
			</if>
			<if test="bean.companyId != null">
				company_id = #{bean.companyId},
			</if>
			<if test="bean.code != null">
				code = #{bean.code},
			</if>
			<if test="bean.productName != null">
				product_name = #{bean.productName},
			</if>
			<if test="bean.price != null">
				price = #{bean.price},
			</if>
			<if test="bean.skuType != null">
				sku_type = #{bean.skuType},
			</if>
			<if test="bean.colorType != null">
				color_type = #{bean.colorType},
			</if>
			<if test="bean.createTime != null">
				create_time = #{bean.createTime},
			</if>
			<if test="bean.createDate != null">
				create_date = #{bean.createDate},
			</if>
			<if test="bean.stock != null">
				stock = #{bean.stock},
			</if>
			<if test="bean.status != null">
				status = #{bean.status},
			</if>
			<if test="bean.isDel != null">
				is_del = #{bean.isDel},
			</if>
		</set>
		where sku_type=#{skuType} and color_type=#{colorType}
	</update>

	<!-- 根据 SkuTypeAndColorType 删除 -->
	<delete id="deleteBySkuTypeAndColorType">
		delete from tb_product_info where sku_type=#{skuType} and color_type=#{colorType}
	</delete>



</mapper>